version: "3.8"

services:
  data-analysis:
    image: python:3.13-bookworm
    container_name: data-analysis
    tty: true
    stdin_open: true
    volumes:
      - ./:/app
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      # Variables de conexión a la base de datos
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=data_analysis
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
    command: >
      sh -c "
        pip install --no-cache-dir -r requirements.txt &&
        echo 'Esperando a que PostgreSQL esté listo...' &&
        until pg_isready -h postgres -p 5432 -U postgres; do
          echo 'PostgreSQL no está listo - esperando...'
          sleep 2
        done &&
        echo 'PostgreSQL está listo!' &&
        tail -f /dev/null
      "
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - data-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: data_analysis
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - data-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - data-network

volumes:
  postgres_data:

networks:
  data-network:
    driver: bridge